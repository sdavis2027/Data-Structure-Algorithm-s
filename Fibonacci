/*
Author: Steven Davis
Date Created: 8/27/2024
csc2710
Path to file ie: ~/students/sdavis/C++/2710_lab1.cpp
Compile with: g++ filename.cpp
Execute with: ./a.out
Description of program: translating algorithms into C++
*/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <ctime>
using namespace std;

//algo Fibonacci nth term (Iterative)
int fib(int n, int & count)
{
  int i;
  int fib_nums[n];
  fib_nums[0] = 0;
  if (n > 0)
  {
   fib_nums[1] = 1;
   for (i=2; i<=n; i++){
    count = count +1;
    fib_nums[i] = fib_nums[i-1] + fib_nums[i-2];
   }
  } 
   return fib_nums[n];
}

//algo Fibonacci nth term (Recursive)

int fib_r (int n_r, int & count)
{
    if (n_r <= 1)
    {
        return n_r;
    } 
    else
    {
     count ++;
     return fib_r(n_r - 1, count) + fib_r(n_r - 2, count);
    }
}

int main()
{
  int count = 0;
  int choice_1;
  int choice_2;
  cout << "(Iterative) Enter the number that you want 'fibonaccied': ";
  cin >> choice_1;
  cout << endl;
  cout << "(Recursive) Enter the number that you want 'fibonaccied': ";
  cin >> choice_2;
  cout << endl;
  cout << "Iterative: " << fib(choice_1, count) << endl;
  cout << "count: " << count << endl; 
  cout << endl;
  count = 0;
  cout << "Recursive: " << fib_r(choice_2, count) << endl;
  cout << "count: " << count << endl; 
  return 0;
}

